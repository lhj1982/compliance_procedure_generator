# GCP-specific Dockerfile for compliance procedure generator frontend
FROM nginx:alpine

# Remove default nginx config
RUN rm /etc/nginx/conf.d/default.conf

# Create templates directory
RUN mkdir -p /etc/nginx/templates

# Copy frontend files
COPY index.html /usr/share/nginx/html/
COPY static /usr/share/nginx/html/static/

# Create nginx config template with fixed port
RUN cat > /etc/nginx/templates/default.conf.template << 'EOF'
server {
    # Fixed port for frontend
    listen 8082;
    server_name _;

    # Enable error logging for debugging
    error_log /dev/stderr debug;
    access_log /dev/stdout combined;

    # Serve static files
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        index index.html;
    }

    # Proxy API requests to backend
    location /api/ {
        resolver 169.254.169.254;

        set $backend_url ${BACKEND_URL};
        proxy_pass $backend_url;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
EOF

# Create entrypoint script
RUN cat > /docker-entrypoint.sh << 'EOF'
#!/bin/sh
set -e

# Set default backend URL if not provided
if [ -z "$BACKEND_URL" ]; then
    export BACKEND_URL="http://backend:9090"
    echo "Using default BACKEND_URL: $BACKEND_URL"
fi

# Only substitute BACKEND_URL in nginx config
envsubst '${BACKEND_URL}' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf

echo "Nginx listening on port: 8082"
echo "Nginx configured to proxy /api/* to: $BACKEND_URL"

# Start nginx
exec nginx -g 'daemon off;'
EOF

RUN chmod +x /docker-entrypoint.sh

# Fixed port for Cloud Run
EXPOSE 8082

# Run nginx
CMD ["/docker-entrypoint.sh"]
